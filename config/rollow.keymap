/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define COL   0
#define COLL  1
#define COLR  2
#define NUMBER  3

/ {
        behaviors {
        tp: tap_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "TAP_MODS";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
                };
                hm: hm {
        compatible = "zmk,behavior-hold-tap";
        label = "hm";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick-tap-ms = <0>;
        flavor = "tap-preferred";
        global-quick-tap;
        bindings = <&kp>, <&kp>;
        };
          tm: tm {
        compatible = "zmk,behavior-hold-tap";
        label = "tm";
        #binding-cells = <2>;
        tapping-term-ms = <150>;
        quick-tap-ms = <0>;
        flavor = "tap-preferred";
        global-quick-tap;
        bindings = <&mo>, <&kp>;
        };
         };


        keymap {
                compatible = "zmk,keymap";

                default_layer {
/* Default
 * .-----------------------------------------.                    .-----------------------------------------.
 * | TAB  |   Q  |   W  |   F  |   P  |   B  |                    |   J  |   L  |   U  |   Y  |   '  | BKSP |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | CTRL |   A  |   R  |   S  |   T  |   G  |                    |   M  |   N  |   E  |   I  |   O  | RET  |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | SHFT |   Z  |   X  |   C  |   D  |   V  |-------.    .-------|   K  |   H  |   ,  |   .  |   /  | SHFT |
 * '-----------------------------------------/       /     \      \-----------------------------------------'
 *                          |  GUI |  LWR | / Space /       \ RET  \  |TT(RS)| Alt  |
 *                          |      |      |/       /         \      \ |      |      |
 *                          '-------------''------'           '------''-------------'
 *
 *   Encoder Left: Up <-> Down
 *   Encoder Right: Left <-> Right
 */
                        bindings = <
   &none   &kp Q &kp W &kp F &kp P &kp B   &kp J &kp L  &kp U     &kp Y   &kp SQT &none
   &none &hm LGUI A &hm LALT R &hm LCTRL S &hm LSHIFT T &kp G   &kp M &hm RSHIFT N  &hm RCTRL E     &hm RALT I   &hm RGUI O    &none
   &none &hm LC(Z) Z &hm LC(X) X &hm LC(C) C &hm LC(V) D &hm LC(LA(V)) V   &kp K &kp H  &kp COMMA &kp DOT &kp FSLH &none
                  &kp LGUI &tm 1 TAB &tm 2 BSPC   &tm 3 SPACE &tm 4 RET &kp RALT
                        >;

                        sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
                };

                lower_layer {
/* LOWER
 * .-----------------------------------------.                    .-----------------------------------------.
 * |  ESC |   1  |  2   |  3   |  4   |  5   |                    |   6  |   7  |   8  |   9  |   0  | BKSP |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | BTCLR| BT1  | BT2  | BT3  | BT4  | BT5  |                    |  LFT |  DWN |   UP |  RGT |      |      |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | SHFT |      |      |      |      |      |-------.    .-------|      |      |      |      |      |      |
 * '-----------------------------------------/       /     \      \-----------------------------------------'
 *                          |  GUI |      | / Space /       \ Enter\  |      |  ALT |
 *                          |      |      |/       /         \      \ |      |      |
 *                          '-------------''------'           '------''-------------'
 *
 *   Encoder Left: PG_UP <-> PG_DN
 *   Encoder Right: -
 */
                        bindings = <
   &none    &trans       &trans       &trans       &trans       &trans            &trans   &kp F7   &kp F8 &kp F9    &kp F10 &none
   &none &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4      &trans &kp F4 &kp F5 &kp F6 &kp F11 &none
   &none  &bt BT_CLR       &trans       &trans       &trans       &trans            &trans   &kp F1   &kp F2 &kp F3    &kp F12 &none
                                        &kp LGUI     &trans       &kp SPACE         &kp RET &trans &kp RALT
                            >;

                            sensor-bindings = <&inc_dec_kp PG_UP PG_DN &inc_dec_kp PG_UP PG_DN>;
                };

                raise_layer {
/* RAISE
 * .-----------------------------------------.                    .-----------------------------------------.
 * | ESC  |   !  |   @  |   #  |   $  |   %  |                    |   ^  |   &  |   *  |   (  |   )  | BKSP |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | CTRL |      |      | Prev | Next |      |                    |   -  |   =  |   {  |   }  |  "|" |   `  |
 * |------+------+------+------+------+------|                    |------+------+------+------+------+------|
 * | SHFT |      |      |      |      |      |-------.    .-------|   _  |   +  |   [  |   ]  |   \  |   ~  |
 * '-----------------------------------------/       /     \      \-----------------------------------------'
 *                          | Play |      | / Space /       \ Enter\  |      |  ALT |
 *                          | Paus |      |/       /         \      \ |      |      |
 *                          '------------''------'            '------''-------------'
 *
 *   Encoder Left: -
 *   Encoder Right: VOL_UP <-> VOL_D
 */
                         bindings = <
  &none &trans   &kp HOME    &kp UP    &kp END    &trans      &kp MINUS    &kp N7    &kp N8     &kp N9   &trans &none
  &none &trans   &kp LEFT    &kp DOWN    &kp RIGHT    &trans      &kp PLUS  &kp N4    &kp N5     &kp N6   &kp SLASH &none
  &none &trans   &trans    &kp PG_UP    &kp PG_DN    &trans      &kp STAR &kp N1    &kp N2     &kp N3   &kp DOT &none
                       &trans    &trans   &trans      &kp EQUAL    &kp N0    &trans
                        >;
                        sensor-bindings = <&inc_dec_kp DOWN UP &inc_dec_kp RIGHT LEFT>;
                };
                num_layer {
                        bindings = <
    &none  &kp EXCL  &kp AT  &kp HASH   &kp DLLR   &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &none
    &none &trans    &trans  &kp C_PREV &kp C_NEXT &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp PIPE &none
    &none &kp ESC    &trans  &trans     &trans     &trans      &trans    &trans    &trans          &trans   &kp BSLH &none
                                   &kp LGUI &kp K_APP &kp DEL   &trans &trans &trans
                        >;

                        sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
                };

        };
};
